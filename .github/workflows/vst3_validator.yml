name: Run VST3 Validators

on:
  push:
    branches: [ main, vst-validator ]
  pull_request:
    branches: [ main, vst-validator ]

jobs:
  validate-vst3:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache apt package lists
        uses: actions/cache@v2
        id: cache-apt-lists
        with:
          path: /var/lib/apt/lists
          key: ${{ runner.os }}-apt-lists-${{ hashFiles('venom/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-apt-lists-

      - name: Cache apt package directories
        uses: actions/cache@v2
        id: cache-apt-packages
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-packages-${{ hashFiles('venom/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-apt-packages-

      - name: Install Dependencies
        if: steps.cache-apt-lists.outputs.cache-hit != 'true' || steps.cache-apt-packages.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxrandr-dev libasound2-dev libgl1-mesa-dev libcurl4-openssl-dev libwebkit2gtk-4.0-dev libgtk-3-dev libxcb-cursor-dev libgtkmm-3.0-dev libxkbcommon-x11-dev libxcb-util-dev libxcb-xkb-dev libxcb-keysyms1-dev tree

      - name: Cache CMake and Ninja
        uses: actions/cache@v2
        with:
          path: ~/.cmake
          key: ${{ runner.os }}-cmake-${{ hashFiles('venom/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-cmake-

      - name: Set up CMake
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        uses: lukka/get-cmake@v3.25.2
        with:
          cmakeVersion: 3.25.2
          ninjaVersion: 1.11.1

      - name: Cache VST3 Validator
        id: cache-vst3-validator
        uses: actions/cache@v2
        with:
          path: cmake-build/bin/Release/validator
          key: ${{ runner.os }}-vst3-validator-${{ hashFiles('venom/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-vst3-validator-

      - name: Set up VST3 SDK
#        if: steps.cache-vst3-validator.outputs.cache-hit != 'true'
        run: |
          set -x
          mkdir -p ../vst3sdk_build
          cd ../vst3sdk_build
          git clone --recursive https://github.com/steinbergmedia/vst3sdk.git 2>&1 | tee setup_vst3sdk.log
          cd vst3sdk
          cmake -B cmake-build -DCMAKE_BUILD_TYPE=Release
          cmake --build cmake-build --target validator -- -j 4
          cp cmake-build/bin/Release/validator vst3_validator

      - name: Copy Validator to Working Directory
        run: |
          set -x
          pwd
          tree ./.. -L 3
          cp ../vst3sdk_build/vst3sdk/cmake-build/bin/Release/validator vst3_validator
          echo "========================="
          tree .. -L 3

#      - name: Cache Submodules
#        id: cache-submodules
#        uses: actions/cache@v2
#        with:
#          path: |
#            venom/.git/modules
#            venom/.git/modules/*
#            venom/extern/spdlog
#            venom/extern/pybind11
#            venom/extern/juce
#          key: ${{ runner.os }}-submodules-${{ hashFiles('venom/.gitmodules') }}
#          restore-keys: |
#            ${{ runner.os }}-submodules-

#      - name: Update Submodules
#        if: steps.cache-submodules.outputs.cache-hit != 'true'
#        run: |
#          set -x
#          git submodule update --init --recursive 2>&1 | tee update_submodules.log

#      - name: Determine Python Path
#        id: determine-python-path
#        run: |
#          set -x
#          PYTHON_EXECUTABLE=$(which python)
#          echo "PYTHON_EXECUTABLE=${PYTHON_EXECUTABLE}" | tee determine_python_path.log
#          echo "::set-output name=python-executable::${PYTHON_EXECUTABLE}"


#      - name: Configure CMake
#        run: |
#          set -x
#          mkdir build 2>&1 | tee configure_cmake.log
#          cd build
#          cmake -D CMAKE_BUILD_TYPE=Release -DPython_EXECUTABLE=${{ steps.determine-python-path.outputs.python-executable }} .. 2>&1 | tee -a ../configure_cmake.log
#
#
#      - name: Build Target
#        run: |
#          set -x
#          cd build
#          cmake .. 2>&1 | tee build_setup.log
#          cmake --build . --target TestPlugin_VST3 --config Release -- -j 8 2>&1 | tee build_target.log

#      - name: Copy Validator to Working Directory
#        run: |
#          set -x
#          pwd
#          cp ../../vst3sdk_build/cmake-build/bin/Release/validator vst3_validator

#      - name: List Files and Run VST3 Validators
#        run: |
#          set -x
#          cd build
#          tree tests/vst3/TestPlugin_artefacts/Release | tee files.log
#          ../vst3_validator -h
#          ../vst3_validator tests/vst3/TestPlugin_artefacts/Release/VST3/TestPlugin.vst3/Contents/x86_64-linux/TestPlugin.so 2>&1 | tee vst3_validation.log

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            setup_vst3sdk.log
            build_setup.log
            determine_python_path.log
            configure_cmake.log
            build_target.log
            files.log
            vst3_validation.log
            update_submodules.log
